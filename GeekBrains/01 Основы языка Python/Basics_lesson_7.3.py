# 3. Напишите функцию которая принимает на вход список. Функция создает из этого списка новый список из квадратных корней чисел
# (если число положительное) и самих чисел (если число отрицательное) и возвращает результат (желательно применить генератор и
# тернарный оператор при необходимости). В результате работы функции исходный список не должен измениться.
# Например:
# old_list = [1, -3, 4]
# result = [1, -3, 2]
#     Примечание: Список с целыми числами создайте вручную в начале файла. Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.

from random import randint
from math import sqrt

# Формируем список из случайных целых чисел от -50 до 50

random_list = [randint(-50, 50) for i in range(100)] # тут генератор списков

# Приводим ранее полученный список к виду требуемый по условию задачи, т.е. из чисел, из которых можно извлечь "красивый" квадратный корень

modern_list = [item for item in random_list if sqrt(abs(item)) % 1 == 0] # тут генератор списков

print(modern_list)

# Вывод вида - "[-9, -9, -9, 9, -36, -1, 16, 25, 25, -1, -4, -25, 49, 36, 16]"

def square_root_calc(default_list):
	new_list = []
	for item in default_list:
		new_list.append(int(sqrt(item)) if item > 0 else item) # тут тернарный оператор
	return new_list

print(square_root_calc(modern_list))

# Вывод вида - "[-9, -9, -9, 3, -36, -1, 4, 5, 5, -1, -4, -25, 7, 6, 4]"

print(modern_list)

# Вывод вида - "[-9, -9, -9, 9, -36, -1, 16, 25, 25, -1, -4, -25, 49, 36, 16]"